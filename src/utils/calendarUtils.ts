import { BookingResult, VendorData, ProblemSummary } from '../types';

export const generateICS = (
  bookingResult: BookingResult,
  vendor: VendorData,
  problemSummary: ProblemSummary
): string => {
  if (!bookingResult.scheduledStartISO) {
    throw new Error('No scheduled time available');
  }

  const startDate = new Date(bookingResult.scheduledStartISO);
  const endDate = new Date(startDate.getTime() + (2 * 60 * 60 * 1000)); // 2 hours duration
  
  const formatDate = (date: Date) => {
    return date.toISOString().replace(/[-:]/g, '').split('.')[0] + 'Z';
  };

  const escape = (text: string) => {
    return text.replace(/[,;\\]/g, '\\$&').replace(/\n/g, '\\n');
  };

  const icsContent = [
    'BEGIN:VCALENDAR',
    'VERSION:2.0',
    'PRODID:-//Gaspar//Home Repair Booking//EN',
    'CALSCALE:GREGORIAN',
    'METHOD:PUBLISH',
    'BEGIN:VEVENT',
    `DTSTART:${formatDate(startDate)}`,
    `DTEND:${formatDate(endDate)}`,
    `DTSTAMP:${formatDate(new Date())}`,
    `UID:gaspar-${bookingResult.confirmationNumber || 'booking'}-${Date.now()}@gaspar.app`,
    `SUMMARY:${escape(`${problemSummary.category.toUpperCase()} Service - ${vendor.name}`)}`,
    `DESCRIPTION:${escape(`Service: ${problemSummary.summary}\\n\\nVendor: ${vendor.name}\\nPhone: ${vendor.phone}\\nAddress: ${vendor.address}\\n\\nBooking Method: ${bookingResult.channel}\\n${bookingResult.confirmationNumber ? `Confirmation: ${bookingResult.confirmationNumber}\\n` : ''}\\nNotes: ${bookingResult.notes}`)}`,
    `LOCATION:${escape(vendor.address)}`,
    'STATUS:CONFIRMED',
    'TRANSP:OPAQUE',
    'BEGIN:VALARM',
    'TRIGGER:-PT1H',
    'DESCRIPTION:Service appointment reminder',
    'ACTION:DISPLAY',
    'END:VALARM',
    'END:VEVENT',
    'END:VCALENDAR'
  ].join('\r\n');

  return icsContent;
};

export const generateReceipt = (
  bookingResult: BookingResult,
  vendor: VendorData,
  problemSummary: ProblemSummary
): string => {
  const date = new Date().toLocaleDateString();
  const time = new Date().toLocaleTimeString();
  
  const receipt = `
GASPAR HOME REPAIR BOOKING RECEIPT
=====================================

Booking Date: ${date} ${time}
${bookingResult.confirmationNumber ? `Confirmation #: ${bookingResult.confirmationNumber}` : ''}

CUSTOMER INFORMATION
--------------------
Problem: ${problemSummary.summary}
Category: ${problemSummary.category.toUpperCase()}
Urgency: ${problemSummary.urgency.toUpperCase()}
${problemSummary.symptoms.length > 0 ? `Symptoms: ${problemSummary.symptoms.join(', ')}` : ''}

VENDOR INFORMATION
------------------
Company: ${vendor.name}
Phone: ${vendor.phone}
Address: ${vendor.address}
Rating: ${vendor.rating}/5 (${vendor.reviewCount} reviews)
${vendor.website ? `Website: ${vendor.website}` : ''}

APPOINTMENT DETAILS
-------------------
${bookingResult.scheduledStartISO 
  ? `Scheduled: ${new Date(bookingResult.scheduledStartISO).toLocaleString()}`
  : 'Time: To be confirmed by vendor'
}
Status: ${bookingResult.status.toUpperCase()}
Booking Method: ${bookingResult.channel === 'phone' ? 'Phone Call' : 
                 bookingResult.channel === 'web_chat' ? 'Website Chat' : 'WhatsApp'}

PRICING
-------
${vendor.serviceFee ? `Service Fee: $${vendor.serviceFee}` : 'Service Fee: To be quoted'}
(Additional charges may apply based on work performed)

NOTES
-----
${bookingResult.notes}

NEXT STEPS
----------
• The service provider will contact you to confirm details
• Be available 15 minutes before the scheduled time
• Have your payment method ready
• Prepare any relevant information about the problem

Thank you for using Gaspar!
For support, contact us at support@gaspar.com

Generated by Gaspar Home Repair Platform
${new Date().toISOString()}
=====================================
  `.trim();
  
  return receipt;
};